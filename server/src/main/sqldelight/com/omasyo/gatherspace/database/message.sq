CREATE TABLE IF NOT EXISTS message (
    id SERIAL PRIMARY KEY,
    content TEXT NOT NULL,
    sender_id INT REFERENCES user_account ON DELETE SET NULL,
    room_id INT NOT NULL REFERENCES room ON DELETE CASCADE,
    created TIMESTAMP NOT NULL DEFAULT(CURRENT_TIMESTAMP),
    modified TIMESTAMP NOT NULL DEFAULT(CURRENT_TIMESTAMP)
);

getById:
SELECT message.*, user_account.id, user_account.username
FROM message
         JOIN user_account ON message.sender_id = user_account.id
WHERE message.id = ?;

messagesWithRoomId:
SELECT message.*, user_account.id, user_account.username
FROM message
         JOIN user_account ON message.sender_id = user_account.id
WHERE message.created < :before
  AND room_id = :roomId
ORDER BY message.created DESC
LIMIT :limit;

create:
INSERT INTO message(content, sender_id, room_id)
VALUES (?, ?, ?)
RETURNING id ;

lastMessage:
SELECT message.*, user_account.id, user_account.username
FROM message
         JOIN user_account ON message.sender_id = user_account.id
WHERE room_id = ?
ORDER BY message.created DESC
LIMIT 1;