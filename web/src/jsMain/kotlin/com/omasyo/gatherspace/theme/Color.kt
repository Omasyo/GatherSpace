package com.omasyo.gatherspace.theme

import com.varabyte.kobweb.compose.ui.graphics.Color

val primaryLight = Color.argb(0xFF154A84)
val onPrimaryLight = Color.argb(0xFFFFFFFF)
val primaryContainerLight = Color.argb(0xFF426FAB)
val onPrimaryContainerLight = Color.argb(0xFFFFFFFF)
val secondaryLight = Color.argb(0xFF505F78)
val onSecondaryLight = Color.argb(0xFFFFFFFF)
val secondaryContainerLight = Color.argb(0xFFD6E4FF)
val onSecondaryContainerLight = Color.argb(0xFF3A4961)
val tertiaryLight = Color.argb(0xFF683671)
val onTertiaryLight = Color.argb(0xFFFFFFFF)
val tertiaryContainerLight = Color.argb(0xFF905A98)
val onTertiaryContainerLight = Color.argb(0xFFFFFFFF)
val errorLight = Color.argb(0xFFBA1A1A)
val onErrorLight = Color.argb(0xFFFFFFFF)
val errorContainerLight = Color.argb(0xFFFFDAD6)
val onErrorContainerLight = Color.argb(0xFF410002)
val backgroundLight = Color.argb(0xFFF9F9FE)
val onBackgroundLight = Color.argb(0xFF1A1C20)
val surfaceLight = Color.argb(0xFFF9F9FE)
val onSurfaceLight = Color.argb(0xFF1A1C20)
val surfaceVariantLight = Color.argb(0xFFDFE2ED)
val onSurfaceVariantLight = Color.argb(0xFF424750)
val outlineLight = Color.argb(0xFF737781)
val outlineVariantLight = Color.argb(0xFFC2C6D1)
val scrimLight = Color.argb(0xFF000000)
val inverseSurfaceLight = Color.argb(0xFF2E3035)
val inverseOnSurfaceLight = Color.argb(0xFFF0F0F6)
val inversePrimaryLight = Color.argb(0xFFA6C8FF)
val surfaceDimLight = Color.argb(0xFFD9D9DF)
val surfaceBrightLight = Color.argb(0xFFF9F9FE)
val surfaceContainerLowestLight = Color.argb(0xFFFFFFFF)
val surfaceContainerLowLight = Color.argb(0xFFF3F3F9)
val surfaceContainerLight = Color.argb(0xFFEDEDF3)
val surfaceContainerHighLight = Color.argb(0xFFE8E8ED)
val surfaceContainerHighestLight = Color.argb(0xFFE2E2E8)

val primaryDark = Color.argb(0xFFA6C8FF)
val onPrimaryDark = Color.argb(0xFF00315F)
val primaryContainerDark = Color.argb(0xFF3765A0)
val onPrimaryContainerDark = Color.argb(0xFFFFFFFF)
val secondaryDark = Color.argb(0xFFB7C7E4)
val onSecondaryDark = Color.argb(0xFF223147)
val secondaryContainerDark = Color.argb(0xFF2E3D54)
val onSecondaryContainerDark = Color.argb(0xFFC1D1EE)
val tertiaryDark = Color.argb(0xFFF0B1F6)
val onTertiaryDark = Color.argb(0xFF4C1B56)
val tertiaryContainerDark = Color.argb(0xFF86518E)
val onTertiaryContainerDark = Color.argb(0xFFFFFFFF)
val errorDark = Color.argb(0xFFFFB4AB)
val onErrorDark = Color.argb(0xFF690005)
val errorContainerDark = Color.argb(0xFF93000A)
val onErrorContainerDark = Color.argb(0xFFFFDAD6)
val backgroundDark = Color.argb(0xFF111317)
val onBackgroundDark = Color.argb(0xFFE2E2E8)
val surfaceDark = Color.argb(0xFF111317)
val onSurfaceDark = Color.argb(0xFFE2E2E8)
val surfaceVariantDark = Color.argb(0xFF424750)
val onSurfaceVariantDark = Color.argb(0xFFC2C6D1)
val outlineDark = Color.argb(0xFF8C919B)
val outlineVariantDark = Color.argb(0xFF424750)
val scrimDark = Color.argb(0xFF000000)
val inverseSurfaceDark = Color.argb(0xFFE2E2E8)
val inverseOnSurfaceDark = Color.argb(0xFF2E3035)
val inversePrimaryDark = Color.argb(0xFF315F9A)
val surfaceDimDark = Color.argb(0xFF111317)
val surfaceBrightDark = Color.argb(0xFF37393E)
val surfaceContainerLowestDark = Color.argb(0xFF0C0E12)
val surfaceContainerLowDark = Color.argb(0xFF1A1C20)
val surfaceContainerDark = Color.argb(0xFF1E2024)
val surfaceContainerHighDark = Color.argb(0xFF282A2E)
val surfaceContainerHighestDark = Color.argb(0xFF333539)